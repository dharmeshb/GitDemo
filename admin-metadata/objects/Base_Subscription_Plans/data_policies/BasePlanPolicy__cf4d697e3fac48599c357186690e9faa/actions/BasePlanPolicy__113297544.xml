<workflow_actions>
<id>113297544</id>
<name>BasePlanPolicy</name>
<action_order>1</action_order>
<type>EXECUTE_JAVA_CODE</type>
<subject></subject>
<description></description>
<end_date>0</end_date>
<flag_owner>0</flag_owner>
<owner></owner>
<email_to></email_to>
<email_additional_to></email_additional_to>
<email_from></email_from>
<cc></cc>
<beanshell_code>import java.text.SimpleDateFormat;
String startDate = (String)requestParams.get(&quot;effective_start_date&quot;);
String endDate = (String)requestParams.get(&quot;effective_end_date&quot;);
String default_flag = (String) requestParams.get(&quot;default_plan&quot;);
String country = (String) requestParams.get(&quot;country&quot;);

String classification =  (String)requestParams.get(&quot;classification&quot;);

if(default_flag.equals(&quot;0&quot;))
{
	if(startDate.equals(&quot;&quot;) || endDate.equals(&quot;&quot;))
	{
		throwError(&quot;Either default flag or effective dates should be specified&quot;);
	}
}

if (default_flag.equals(&quot;1&quot;) &amp;&amp; !startDate.equals(&quot;&quot;) &amp;&amp; !endDate.equals(&quot;&quot;))
{
      throwError(&quot;Either default flag or effective dates should be specified&quot;);

}



if(!startDate.equals(&quot;&quot;) &amp;&amp; !endDate.equals(&quot;&quot;))
{
	SimpleDateFormat fmt = new SimpleDateFormat(&quot;MM/dd/yyyy&quot;);
	Date stDt = fmt.parse(startDate);
	Date edDt = fmt.parse(endDate);
	debug(stDt.toString() +&quot;   &quot;+ edDt.toString());

	if(stDt.after(edDt))	
	{
 		throwError(&quot;Start Date can not be greater than end Date&quot;);
	}
}
/*StringBuilder defaultfilterStr = new StringBuilder().append(&quot;default_plan equals &quot;)
                                      .append(1)                                      
                                      .append(&quot; and country equals &apos;&quot;)
                                      .append(country)
                                      .append(&quot;&apos; and classification equals &apos;&quot;)
                                      .append(classification)
                                      .append(&quot;&apos;&quot;);
  debug(defaultfilterStr.toString());
       Result defaultPlan = searchRecords(&quot;Base_Subscription_Plans&quot;, &quot;record_id&quot;, defaultfilterStr.toString());
 debug(defaultPlan.getCode());
if (defaultPlan.getCode() &gt; 0)
{
  throwError(&quot;A Default Base plan  exists with the same criteria&quot;);
 
}

StringBuilder datefilterStr = new StringBuilder().append(&quot;effective_start_date equals &apos;&quot;)
                                      .append(startDate)
                                      .append(&quot;&apos;&quot;)
                                      .append(&quot; and effective_end_date equals &apos;&quot;)
                                      .append(endDate)
                                      .append(&quot;&apos;&quot;)
                                      .append(&quot; and country equals &apos;&quot;)
                                      .append(country)
                                      .append(&quot;&apos; &quot;)
                                      .append(&quot; and classification equals &apos;&quot;)
                                      .append(classification)
                                      .append(&quot;&apos; &quot;);
                                      

debug(defaultfilterStr.toString());                                     

Result effectiveDatePlan = searchRecords(&quot;Base_Subscription_Plans&quot;, &quot;record_id&quot;, datefilterStr.toString());                                     

if (effectiveDatePlan.getCode() &gt; 0)
{
  throwError(&quot;A Base plan  exists with the same effective dates&quot;);
 
}*/</beanshell_code>
<date_created></date_created>
<date_modified></date_modified>
<created_id></created_id>
<modified_id></modified_id>
<policy_id>cf4d697e3fac48599c357186690e9faa</policy_id>
<object_id>18350dccebbd49eabdf52e051051cb48</object_id>
<update_column></update_column>
<update_value></update_value>
<soap_server_url></soap_server_url>
<soap_server_port>0</soap_server_port>
<soap_message></soap_message>
<soap_action></soap_action>
<soap_content_type></soap_content_type>
<is_deleted>0</is_deleted>
<editor_type>0</editor_type>
<emailfrom_userid></emailfrom_userid>
<affiliate_id></affiliate_id>
<bcc></bcc>
</workflow_actions>
